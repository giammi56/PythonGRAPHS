// ------------------------------------------------------------------------------------------
// Template for tuning of the ion momenta of a polyatomic molecule.
//
// Simply copy functions to "user.cpp" replacing the old ones...
// ------------------------------------------------------------------------------------------

#ifdef _MSC_VER
#define _CRT_SECURE_NO_WARNINGS
#endif

#include "TStyle.h"
#include "TH2D.h"
#include "TCanvas.h"
#include "TSystem.h"
#include "TProfile.h"
#include "TCutG.h"
#include "TPolyLine.h"
#include "TObjArray.h"
#include "TF1.h"
#include "ipa.h"
void ipa_class::init_user_histograms() {
	// Due to the multithreading the histograms need to be defined as a double array 
	// with first index being "[th]".
	// Example: "this->H1D[th][0]" is the first 1D histogram.

	int ions = 3;
	int bins = 100;
	double mom = 70.0;

	this->myCanvas[0] = root->newCanvas("IPA","Interactive Parameter Adjustment - The Canvas",10,300,330*ions,330*3);
	this->myCanvas[0]->Divide(ions,3);
	char s[20];
	char t[20];
	for(int j=0;j<ions;j++) {
		for(int th=0;th<MAXTHREADS;th++) {
			sprintf_s(t,"Ion %i",j);
			sprintf_s(s,"pxy_%i_%i",th,j);
			this->H2D[th][j*3] = root->newTH2D(s,t,bins,-mom,mom,"p_x",bins,-mom,mom,"p_y","COLZ");
			sprintf_s(s,"pyz_%i_%i",th,j);
			this->H2D[th][j*3 + 1] = root->newTH2D(s,t,bins,-mom,mom,"p_x",bins,-mom,mom,"p_z","COLZ");
			sprintf_s(s,"pxz_%i_%i",th,j);
			this->H2D[th][j*3 + 2] = root->newTH2D(s,t,bins,-mom,mom,"p_y",bins,-mom,mom,"p_z","COLZ");
		}
	}
}

void ipa_class::user_function(CH_event_struct *evti, int th) {
	// Due to the multithreading you need to add "[th]" to e, r, mol and big_mol!
	// Example: second electron is "e[th][1]->", a diatomic is "mol[th]->" etc.
	int ions = 3;
	for(int i=0;i<ions;i++) {
		H2D[th][i*3]->Fill(big_mol[th]->ion[i]->mom.x,big_mol[th]->ion[i]->mom.y,1.0);
		H2D[th][i*3 + 1]->Fill(big_mol[th]->ion[i]->mom.x,big_mol[th]->ion[i]->mom.z,1.0);
		H2D[th][i*3 + 2]->Fill(big_mol[th]->ion[i]->mom.y,big_mol[th]->ion[i]->mom.z,1.0);
	}
}

void ipa_class::user_draw() {
	// Plotting the histos: first array index is always "[0]", second is the one of 
	// the histogram you want to plot. E.g. H2D[0][2]->Draw() will plot your histogram
	// number two.

	int ions = 3;
	for(int i=0;i<ions;i++) {
		myCanvas[0]->cd(i+1);
		H2D[0][i*3]->Draw();
		myCanvas[0]->cd(i+1 + ions);
		H2D[0][i*3 + 1]->Draw();
		myCanvas[0]->cd(i+1 + ions*2);
		H2D[0][i*3 + 2]->Draw();
	}
	
	myCanvas[0]->Modified();
	myCanvas[0]->Update();
}